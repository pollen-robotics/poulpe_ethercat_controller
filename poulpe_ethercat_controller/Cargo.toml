[package]
name = "poulpe_ethercat_controller"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bitvec = "1.0.1"
num = "0.4.0"
num-traits = "0.2.15"
num-derive = "0.3.3"
ethercat_controller = { path = "../ethercat_controller" }
log = "0.4.17"
env_logger = "0.9.0"


[features]
default = ["verify_orbita_type", "allow_partial_network", "safe_turn_on", "turn_off_slaves_setup", "allow_fault_on_slave"]
verify_orbita_type = []     # This feature is used to verify the type of the Orbita device connected to the EtherCAT network
                            # Verifies if the yaml file specifies the correct type of the Orbita device connected to the network (orbita2d = 2 and orbita3d = 3)
                            # If not specified this check is not performed

allow_partial_network = []  # This feature enables to instantiate the ethercat master that talks to only a part of the EtherCAT slaves connected to the network 
                            # If not specified yaml file should specify all the slaves connected to the network

allow_fault_on_slave = []   # If this feature is set the controller will allow the slaves and will not throw an error any of the slaves is in fault state

safe_turn_on = []           # Setting the current position to the target position on torque on, and making sure that it has been set before turning on the slave

switchon_on_turnon = []     # On eacth turn on call the turn on, the switch on command is sent to the slaves as well 
                            # This allows the slaves to be recovered from the SwitchOnDisabled state 
                            # -> This is not recommended but can be used for debugging or to make the switch on more robust

turn_off_slaves_setup = []  # This feature is used to turn off the slaves connected to the network
                            # If slaves were in OperationEnabled state (have the voltage applied to their motors) the slaves will be turned off